version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: django_web
    ports:
      - "8888:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - postgres
      - elasticsearch

  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

#  redis:
#    image: redis:7
#    container_name: redis_cache
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis_data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: task_tracker_lms
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1

#  celery_worker:
#    build:
#      context: .
#      dockerfile: backend/Dockerfile
#    container_name: celery_worker
#    command: celery -A config worker --loglevel=info
#    volumes:
#      - ./backend:/app
#    env_file:
#      - .env
#    depends_on:
#      - redis
#      - postgres
#
#  celery_beat:
#    build:
#      context: .
#      dockerfile: backend/Dockerfile
#    container_name: celery_beat
#    command: celery -A config beat --loglevel=info
#    volumes:
#      - ./backend:/app
#    env_file:
#      - .env
#    depends_on:
#      - redis
#      - postgres

volumes:
  postgres_data:
#  redis_data:
  elastic_data:
    name: elastic_tracker_data